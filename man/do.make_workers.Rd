% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/3_external_data_management.R
\name{do.make_workers}
\alias{do.make_workers}
\title{Garbage Collection and Parallelization Management}
\usage{
do.make_workers(workers = 5, refresh = TRUE, with_cluster = NULL, ...)
}
\arguments{
\item{workers}{(integer) The number of multisession workers to spawn in the call to \code{future::plan()}.  Valid values are between 1 and 10.}

\item{refresh}{(logical) When \code{TRUE}, parallelization workers are cleared out and redefined according to values passed to argument \code{workers}}

\item{with_cluster}{(string) The object name holding a secondary cluster object (e.g., an cluster created with \code{\link[parallel]{makeCluster}})}

\item{...}{(Not used)}
}
\description{
\code{do.make_workers()} is a simple manager for setting and freeing \code{future}s and external clusters.  This has a fairly restricted level of flexibility, but it does make management of parallelized resources easier to execute.
}
\seealso{
Other Data transmission: 
\code{\link{check.db_conn}()},
\code{\link{do.export_data}()},
\code{\link{do.get_data}()},
\code{\link{do.make_query}()}
}
\concept{Data transmission}
